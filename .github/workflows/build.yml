---
on: [push, pull_request]
name: Test
jobs:
  build:
    name: build
    strategy:
      matrix:
        go-version: [1.18.3]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - run: go test ./...
    - run: go build ./cmd/go-musicbot
    
    - name: setup fpm
      run: sudo gem install fpm
    
    - name: git status
      run: git status
    
    - name: make package
      run: ./deb-build.sh

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      # if: github.event_name == 'release' && github.event.action == 'created'
      with:
        name: package
        path: ./out/packages/*
        retention-days: 5

    - name: Setup package cloud
      run: sudo gem install package_cloud

    - name: Push to package_cloud
      env:
        PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
      run: package_cloud push svenwiltink/go-musicbot/ubuntu/bionic ./out/packages/*
  golangci:
    name: lint
    strategy:
      matrix:
        go-version: [1.18.x]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
